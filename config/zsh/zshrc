zstyle ':completion:*' completer _complete _ignored _correct _approximate _prefix
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' file-sort name
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent pwd
zstyle ':completion:*' insert-unambiguous false
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list '+m:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+r:|[._-]=** r:|=**'
zstyle ':completion:*' max-errors 3
zstyle ':completion:*' menu select=1
zstyle ':completion:*' original false
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' verbose true

autoload -Uz compinit
compinit

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt notify
unsetopt autocd beep extendedglob nomatch
bindkey -v

stty start undef
stty stop undef
stty lnext undef

. $HOME/zero/core/lib/sh/initenv

export NIX_PATH="$NIX_PATH:$shelldefs"

export PAGER='less -R'

# for some reason COLORTERM isn't exported over ssh but TERM is
# hence just set COLORTERM afterwards on the target machine i guess
if [[ $TERM = alacritty ]]; then
	export COLORTERM=truecolor
fi

# see also https://grml.org/zsh/zsh-lovers.html
rationalise-dot() {
  if [[ $LBUFFER = *.. ]]; then
    LBUFFER+=/..
  else
    LBUFFER+=.
  fi
}
zle -N rationalise-dot
bindkey . rationalise-dot

alias evcxr='evcxr --edit-mode vi'
alias nv='neovide'
alias zt='zathura --fork'
alias wh='wormhole-rs'
alias rsync='rsy'
alias sqlite='sqlite3 -box'
alias waypipe='waypipe --video av1 --compress zstd=4'
alias curl='curl -LC -'
alias lsblk='lsblk -f'
alias datetime='date "+%Y-%m-%d %H-%M-%S"'
alias today='date +%Y-%m-%d'
alias cal='cal -m'
alias year='cal `date +%Y`'

alias cr='cargo run'
alias crr='cargo run --release'
alias cb='cargo build'
alias cbr='cargo build --release'
alias ch='cargo check'
alias cl='cargo clippy'
alias clp='cargo clippy -- -Wclippy::pedantic'
alias cw='cargo watch -c'
alias cf='cargo fmt'
alias cbe='cargo bench'
alias ct='cargo nextest'
alias docs='cargo doc --open'
alias cm='cargo miri'
alias ca='cargo apk'
alias cfg='CARGO_PROFILE_RELEASE_DEBUG=true cargo flamegraph'

alias gst='git status'
alias gla='git log --reverse --ext-diff'
alias gl='gla --since 2weeks'
alias glo='gl --oneline'
alias glp='gl --patch'
alias grl='git reflog'
alias gd='git diff'
alias gdt='gd --stat --color=always'
alias gds='gds --staged'
alias gs='git show --ext-diff'
alias gsw='git switch'
alias gsc='gsw --create'
alias gb='git branch'
alias ga='git add'
alias ga.='ga .'
alias gco='git commit'
alias gca='gco --amend'
alias gr='git rebase'
alias gri='gr --interactive'
alias grc='gr --continue'
alias gra='gr --abort'
alias gp='git pull'
alias gps='git push'
alias gpsf='gps --force-with-lease'


man() {
  if [[ ! -n $1 ]]; then
	echo "which manual page do you want?"
	return 1
  fi

  nv -- -c "Man $*" -c only
}

bydir() {
	dir="$(basename $(pwd))"
	touch $dir$1
}

flash() {
	sudo dd if=$1 of=$2 \
		status=progress \
		bs=4M \
		oflag=sync
}

# evaluates the pattern on the device and then pulls the files over
adb-pull-pattern() {
	adb shell "cd $(dirname $1) && tar -zcf - $(basename $1)" \
		| pv \
		| tar -zxf -
}

# wrapper for nix-shell to make it launch zsh and cause less friction in my workflow
nix-shell() {
	command nix-shell $@ \
		--command "SHELL=$(command which zsh) exec $(command which zsh) -i"
}
shell() {
	inner_cmd="SHELL=$(command which zsh) "
	if [[ -z $1 ]]; then
		# no args given and nothing to do by "default"
		return
	fi

	if [[ ! -d "$shelldefs/$1" ]]; then
		echo "shell definition path '$1' not found"
		return
	fi

	if [[ -z $2 ]]; then
		# finally launch zsh
		inner_cmd="SHELL=$(command which zsh) exec $(command which zsh) -i"
	else
		# recurse further to handle rest of the given shells
		inner_cmd="exec $(command which zsh) -ic \"$funcstack[1] $argv[2,-1]\""
	fi

	before=$(pwd)
	cd "$shelldefs/$1"

	command nix-shell --command "cd $before; $inner_cmd"

	cd $before
}

pwd-as-title() {
	print -nP '\e]2;%~\a'
}
chpwd_functions+=("pwd-as-title")
print -nP '\e]2;%~\a'

setopt prompt_subst
if [[ -z "$TIME_LEFT" ]]; then
	TIME_LEFT=$(time-left)
fi
RPROMPT+='${TIME_LEFT:+ >${TIME_LEFT}}${SHELL_NAME:+ %2F\$${SHELL_NAME}%f}'

eval "$(direnv hook zsh)"

source ~/.privaterc 2>/dev/null || true
